from operator import length_hint

numbers = [2, -93, -2, 8, None, -44, -1, -85, -14, 90, -22, -90, -100, -8, 38, -92, -45, 67, 53, 25]

gap = numbers[4] #Обозначаем пропуск как переменную

numbers_without_none = numbers[:4] + numbers[5:] #Создаем список из чисел кроме пропуска, т.е до и после 4-го элеменита (хотя после выполнения понял, что можно вместо "4" использовать перееменную gap)
length_with_none = len(numbers)                  #Количество всех элементов
sum_without_none = sum(numbers_without_none)     #Сумма элементов без пролпуска
average_numbers_without_none = sum_without_none/length_with_none #Нахождение среднего арифметического

numbers[4] = average_numbers_without_none        #Понял, что можно изменить заданную вначале переменную, а не напрямую элемент


print("Измененный список:", numbers)

"""У меня есть вопрос к проверяющему, прошу пожалуйста помочь: можно ли в данном задании найти элемент "None" не 
самостоятельно, а с помощью кода? как например, мы можем найти повторяющиеся элементы с помощью изменения class-а 
строки, например, на set и тем самым исключим повторяющиеся элементы, а потом вычетом строк и находим. Как можно поступить здесь? Спасибо"""
